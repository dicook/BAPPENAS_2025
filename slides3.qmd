---
title: "Working with big data"
title-slide-attributes: 
  data-background-image: "images/bg.png"
  data-background-size: 100%
subtitle: "Session 3: Statistical modeling and machine learning"
author: "Professor Di Cook"
institute: "Department of Econometrics and Business Statistics"
footer: "[BAPPENAS Masterclass - Day 3 Session 3](https://dicook.github.io/BAPPENAS_2025/)"
format:
  revealjs:
    multiplex: false
    slide-number: c/t
    slide-tone: false
    theme: "assets/monash.scss"
    width: 1600
    height: 900
    margin: 0.05
    embed-resources: true
---

```{r, include = FALSE}
# Load libraries 
source("libraries.R")

# Set up chunk for all slides
source("chunk_options_and_themes.R")
```

```{r}
#| label: setting_up
#| echo: false
load(here::here("data/french_fries.rda"))
```

## Models and model output

Functions such as `lm`, `glm`, `lmer`, `glmmTMB` ... allow us to fit models

e.g. fit french fry rating with respect to all designed main effects:

```{r}
#| label: models and model output

ff_long <- french_fries |> pivot_longer(potato:painty, names_to = "type", values_to = "rating")
ff_lm <- lm(rating~type+treatment+time+subject, 
data=ff_long)
```

##

`summary`, `str`, `resid`, `fitted`, `coef`, ... allow us to extract different parts of a model for a linear model. Other model functions work differently ... major headaches!

```{r}
#| label: examine the model fit
summary(ff_lm)
```



## Tidying model output

The package `broom` (`broom.mixed` for `glmmTMB`) gets model results into a tidy format at different levels

- model level: `broom::glance` (values such as AIC, BIC, model fit, ...)
- coefficients in the model: `broom::tidy` (estimate, confidence interval, significance level, ...)
- observation level: `broom::augment` (fitted values, residuals, predictions, influence, ...)



## Goodness of fit statistics: `glance`

```{r}
#| label: goodness of fit statistics
glance(ff_lm)
```

## Model estimates: `tidy`

```{r}
#| label: model estimates
ff_lm_tidy <- tidy(ff_lm)
head(ff_lm_tidy)
```

## Model diagnostics: `augment`

```{r}
#| label: model diagnostics
ff_lm_all <- augment(ff_lm)
glimpse(ff_lm_all)
```

## Residual plot

```{r}
#| label: residual plot
ggplot(ff_lm_all, aes(x=.fitted, y=.resid)) + geom_point()
```

## Adding random effects

Add random intercepts for each subject

```{r}
#| label: add random intercepts for each subject
#| results: hide
fries_lmer <- lmer(rating~type+treatment+time + ( 1 | subject ), 
data = ff_long)
```


## Your turn {.inverse}

- Run the code of the examples so far

The `broom.mixed` package provides similar functionality to mixed effects models as `broom` does for fixed effects models

- Try out the functionality of `broom.mixed` on each level: model, parameters, and data
- Augment the `ff_long` data with the model diagnostics
- Plot the residuals from the random effects model
- Plot fitted values against observed values

::: {.content-visible when-format="revealjs"}
`r countdown::countdown(5)`
:::

```{r}
#| label: solution to french fries modeling
#| eval: false
#| echo: false
## the model is pretty bad:
glance(fries_lmer)
tidy(fries_lmer)

ff_lmer_all <- augment(fries_lmer)

ggplot(ff_lmer_all, aes(x=.fitted, y=.resid)) + geom_point() +
  coord_equal()

ggplot(ff_lmer_all, aes(x=.fitted, y=rating)) + geom_point() +
  coord_equal() 
```

## Statistical models

## Computational models

## Forecasting

## Resources

- [tidymodels.org](https://www.tidymodels.org/)
- [Tidy Modeling with R](https://www.tmwr.org/)
- [Tidy Text](https://www.tidytextmining.com/)
- [Interpretable Machine Learning](https://christophm.github.io/interpretable-ml-book/)
- [Forecasting: Principles and Practice (3e)](https://otexts.com/fpp3/)

::: bottom
<span style="display:inline-block;"><a rel="license" href="http://creativecommons.org/licenses/by-nc-sa/4.0/"><img alt="Creative Commons License" style="border-width:0" src="https://i.creativecommons.org/l/by-nc-sa/4.0/88x31.png" /></a></span><span style="display:inline-block;"> This work is licensed under a <a rel="license" href="http://creativecommons.org/licenses/by-nc-sa/4.0/">Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License</a>.</span>
:::


